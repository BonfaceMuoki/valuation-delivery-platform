# name: autodeploy
# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Testing-Initiation
#         run: echo "Testing workflow initiation!"
#       - name: Copy env.example to .env in api
#         run: cp api/.env.example api/.env

#       - name: Assign value in .env
#         run: |
#           sed -i 's/GOOGLE_SITE_KEY=.*/GOOGLE_SITE_KEY=${{ secrets.GOOGLE_SITE_KEY }}/' api/.env

#       - name: Display  api .env contents
#         run: cat api/.env
#       - name: Deploying API
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           password: ${{ secrets.SERVER_PASSWORD }}
#           port: ${{ secrets.SERVER_PORT }}
#           script: |
#                  cd /var/www/html
#                  sudo git pull
#                  cd api
#                  sudo cp .env.prod .env
#                  composer install --no-interaction --prefer-dist --optimize-autoloader                
#                  sed -i 's/APP_NAME=.*/APP_NAME=${{ secrets.APP_NAME }}/' /var/www/html/api/.env
#                  sed -i 's/APP_ENV=.*/APP_ENV=${{ secrets.APP_ENV_PROD }}/' /var/www/html/api/.env
#                  sed -i 's/APP_DEBUG=.*/APP_DEBUG=${{ secrets.APP_DEBUG }}/' /var/www/html/api/.env
#                  sed -i 's/APP_URL=.*/APP_URL=${{ secrets.APP_URL }}/' /var/www/html/api/.env
#                  sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=${{ secrets.DB_CONNECTION }}/' /var/www/html/api/.env
#                  sed -i 's/DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/' /var/www/html/api/.env
#                  sed -i 's/DB_PORT=.*/DB_PORT=${{ secrets.DB_PORT }}/' /var/www/html/api/.env
#                  sed -i 's/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/' /var/www/html/api/.env
#                  sed -i 's/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/' /var/www/html/api/.env
#                  sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/' /var/www/html/api/.env
#                  sed -i 's/MAIL_MAILER=.*/MAIL_MAILER=${{ secrets.MAIL_MAILER }}/' /var/www/html/api/.env
#                  sed -i 's/MAIL_HOST=.*/MAIL_HOST=${{ secrets.MAIL_HOST }}/' /var/www/html/api/.env
#                  sed -i 's/MAIL_PORT=.*/MAIL_PORT=${{ secrets.MAIL_PORT }}/' /var/www/html/api/.env
#                  sed -i 's/MAIL_USERNAME=.*/MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}/' /var/www/html/api/.env
#                  sed -i 's/MAIL_PASSWORD=.*/MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}/' /var/www/html/api/.env
#                  sed -i 's/MAIL_ENCRYPTION=.*/MAIL_ENCRYPTION=${{ secrets.MAIL_ENCRYPTION }}/' /var/www/html/api/.env
#                  sed -i 's/MAIL_FROM_ADDRESS=.*/MAIL_FROM_ADDRESS=${{ secrets.MAIL_FROM_ADDRESS }}/' /var/www/html/api/.env
#                  sed -i 's/GOOGLE_SITE_KEY=.*/GOOGLE_SITE_KEY=${{ secrets.GOOGLE_SITE_KEY }}/' /var/www/html/api/.env
#                  chmod -R 777 storage
#                  chmod -R 777 public/reportqr_codes
#                  chmod -R 777 public/reports               
#                  php artisan migrate --force
#                  php artisan jwt:secret --force
#                  php artisan optimize
#                  php artisan key:generate
#                  php artisan config:cache
#                  php artisan config:clear      
#       - name: Deploying Dashboard build copy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           password: ${{ secrets.SERVER_PASSWORD }}
#           port: ${{ secrets.SERVER_PORT }}
#           script: |
#                 cd /var/www/html/dashboard
#                 sudo cp -r build/* .  


